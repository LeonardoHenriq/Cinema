// <auto-generated />
using System;
using Cinema.Persistence;
using Cinema.Persistence.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinema.Persistence.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Cinema.Domain.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagemURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("Cinema.Domain.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantidadeAssentos")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Cinema.Domain.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataSessao")
                        .HasColumnType("TEXT");

                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HorarioFinal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HorarioInicial")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoAnimacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoAudio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorIngresso")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sessoes");
                });

            modelBuilder.Entity("Cinema.Domain.Sessao", b =>
                {
                    b.HasOne("Cinema.Domain.Filme", "filme")
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Domain.Sala", "sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("filme");

                    b.Navigation("sala");
                });
#pragma warning restore 612, 618
        }
    }
}
